{"ast":null,"code":"var _jsxFileName = \"/Users/landon/Desktop/WebDev course/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  // route keeps track of where we are on the page, initially on signin page\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n      console.log(this.state.user.name);\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width); // grabbing the css styles that are in px to calculate\n\n      const height = Number(image.height); // where the endpoints of the square should be\n\n      return {\n        // using data given to us by the api response, we can calculate the face\n        // example, left_col is one of the things from the response\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // below code is from the clarifai models website\n\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        console.log('here');\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/landon/Desktop/WebDev course/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","SignIn","Register","Logo","FaceRecognition","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","data","setState","console","log","state","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onButtonSubmit","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onInputChange","event","target","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js'\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\nimport Logo from './components/Logo/Logo'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\n\nimport './App.css';\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50, \n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n   input: '',\n      imageUrl:'',\n      box: {},\n      // route keeps track of where we are on the page, initially on signin page\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n}\nclass App extends Component  {\n  constructor () {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user : {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n    console.log(this.state.user.name);\n  }\n\n  /*componentDidMount() {\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log('oops'))\n  }*/\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width) // grabbing the css styles that are in px to calculate\n    const height = Number(image.height) // where the endpoints of the square should be\n    return {\n      // using data given to us by the api response, we can calculate the face\n      // example, left_col is one of the things from the response\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox  = (box) => {\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // below code is from the clarifai models website\n    fetch('http://localhost:3000/imageurl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              input: this.state.input\n            })\n          })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n            .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      console.log('here');\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n          \n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}